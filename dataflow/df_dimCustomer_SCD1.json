{
	"name": "df_dimCustomer_SCD1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CustomeSource",
						"type": "DatasetReference"
					},
					"name": "customersource"
				},
				{
					"dataset": {
						"referenceName": "dimCustomer",
						"type": "DatasetReference"
					},
					"name": "dimCustomer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dimCustomer",
						"type": "DatasetReference"
					},
					"name": "Sinktarget"
				}
			],
			"transformations": [
				{
					"name": "createHashKey"
				},
				{
					"name": "exist"
				},
				{
					"name": "lookupCustomerID"
				},
				{
					"name": "dateColumn"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as integer,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> customersource",
				"source(output(",
				"          CustomerID as integer,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          InsertedDate as timestamp,",
				"          ModifiedDate as timestamp,",
				"          HashKey as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> dimCustomer",
				"customersource derive(hashkey = sha2(256, iifNull(Title,'')+iifNull(FirstName,'')+iifNull(MiddleName,'')+iifNull(LastName,'')+iifNull(Suffix,'')+iifNull(CompanyName,'')+iifNull(SalesPerson,'')+iifNull(EmailAddress,'')+iifNull(Phone,''))) ~> createHashKey",
				"createHashKey, dimCustomer exists(createHashKey@hashkey == dimCustomer@HashKey,",
				"     negate:true,",
				"     broadcast: 'auto')~> exist",
				"exist, dimCustomer lookup(customersource@CustomerID == dimCustomer@CustomerID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupCustomerID",
				"lookupCustomerID derive(inserted_Date = iif(isNull(InsertedDate), currentTimestamp(),InsertedDate),",
				"          modifiedDate = currentTimestamp()) ~> dateColumn",
				"dateColumn alterRow(upsertIf(true())) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerID as integer,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          InsertedDate as timestamp,",
				"          ModifiedDate as timestamp,",
				"          HashKey as string",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['CustomerID'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CustomerID = customersource@CustomerID,",
				"          Title = customersource@Title,",
				"          FirstName = customersource@FirstName,",
				"          MiddleName = customersource@MiddleName,",
				"          LastName = customersource@LastName,",
				"          Suffix = customersource@Suffix,",
				"          CompanyName = customersource@CompanyName,",
				"          SalesPerson = customersource@SalesPerson,",
				"          EmailAddress = customersource@EmailAddress,",
				"          Phone = customersource@Phone,",
				"          InsertedDate,",
				"          ModifiedDate = dateColumn@modifiedDate,",
				"          HashKey = createHashKey@hashkey",
				"     )) ~> Sinktarget"
			]
		}
	}
}